--- compiler/generator/llvm-c-dsp.h~	2013-05-27 15:13:24.767672950 +0200
+++ compiler/generator/llvm-c-dsp.h	2013-05-27 15:14:30.248736087 +0200
@@ -94,9 +94,9 @@
  * @param bit_code_path - the LLVM bitcode file pathname
  * @param target - the LLVM machine target (using empty string will takes current machine settings)
  * @param opt_level - LLVM IR to IR optimization level (from 0 to 3)
 */
-llvm_dsp_factory* readCDSPFactoryFromBitcodeFile(const char* bit_code_path, const std::string& target, int opt_level);
+llvm_dsp_factory* readCDSPFactoryFromBitcodeFile(const char* bit_code_path, const char* target, int opt_level);
 
 /**
  * Write a Faust DSP factory into a LLVM bitcode file.
  * 
--- compiler/generator/llvm_dsp_aux.cpp~	2013-05-27 15:08:03.449131661 +0200
+++ compiler/generator/llvm_dsp_aux.cpp	2013-05-27 15:14:23.586730165 +0200
@@ -626,9 +626,9 @@
 {
     return writeDSPFactoryToBitcode(factory).c_str();
 }
 
-EXPORT llvm_dsp_factory* readCDSPFactoryFromBitcodeFile(const char* bit_code_path, const std::string& target, int opt_level)
+EXPORT llvm_dsp_factory* readCDSPFactoryFromBitcodeFile(const char* bit_code_path, const char* target, int opt_level)
 {
     return readDSPFactoryFromBitcodeFile(bit_code_path, target, opt_level);
 }
 
--- compiler/generator/llvm_dsp_aux.hh~	2013-05-27 16:32:50.899779510 +0200
+++ compiler/generator/llvm_dsp_aux.hh	2013-05-27 16:37:59.318448283 +0200
@@ -267,9 +267,9 @@
 EXPORT llvm_dsp_factory* readCDSPFactoryFromBitcode(const char* bit_code, const char* target, int opt_level);
 
 EXPORT const char* writeCDSPFactoryToBitcode(llvm_dsp_factory* factory);
 
-EXPORT llvm_dsp_factory* readCDSPFactoryFromBitcodeFile(const char* bit_code_path, const std::string& target, int opt_level);
+EXPORT llvm_dsp_factory* readCDSPFactoryFromBitcodeFile(const char* bit_code_path, const char* target, int opt_level);
 
 EXPORT void writeCDSPFactoryToBitcodeFile(llvm_dsp_factory* factory, const char* bit_code_path);
 
 EXPORT llvm_dsp_factory* readCDSPFactoryFromIR(const char* ir_code, const char* target, int opt_level);
